!function(e){function t(t){for(var s,o,r=t[0],d=t[1],c=t[2],u=0,f=[];u<r.length;u++)o=r[u],Object.prototype.hasOwnProperty.call(i,o)&&i[o]&&f.push(i[o][0]),i[o]=0;for(s in d)Object.prototype.hasOwnProperty.call(d,s)&&(e[s]=d[s]);for(l&&l(t);f.length;)f.shift()();return n.push.apply(n,c||[]),a()}function a(){for(var e,t=0;t<n.length;t++){for(var a=n[t],s=!0,r=1;r<a.length;r++){var d=a[r];0!==i[d]&&(s=!1)}s&&(n.splice(t--,1),e=o(o.s=a[0]))}return e}var s={},i={1:0},n=[];function o(t){if(s[t])return s[t].exports;var a=s[t]={i:t,l:!1,exports:{}};return e[t].call(a.exports,a,a.exports,o),a.l=!0,a.exports}o.m=e,o.c=s,o.d=function(e,t,a){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(o.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)o.d(a,s,function(t){return e[t]}.bind(null,s));return a},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="";var r=window.webpackJsonp=window.webpackJsonp||[],d=r.push.bind(r);r.push=t,r=r.slice();for(var c=0;c<r.length;c++)t(r[c]);var l=d;n.push([1821,0]),a()}({1821:function(e,t,a){e.exports=a(1832)},1832:function(e,t,a){"use strict";a.r(t);var s=a(7),i=a(385),n=a(35),o=a(10),r=a(125),d=a.n(r),c=a(541),l=a(6),u=a(104),f=a(130),p=a(8),h=a(280),w=a(233),g=a(49),y=a(33),m=a(171),I=a(75),v=a(452),b=a(43),L=a(298),E=a(528);const O=[{listId:"meetup.com",name:"meetup.com",parentFolderType:"endsWith",subFolderType:"title",isIgnored:!1},{listId:"facebook.com",name:"facebook.com",parentFolderType:"endsWith",subFolderType:"title",isIgnored:!1},{listId:"google.com",name:"google.com",parentFolderType:"endsWith",subFolderType:"senderName",isIgnored:!1},{listId:"groupon",name:"groupon",parentFolderType:"endsWith",subFolderType:"senderName",isIgnored:!1},{listId:"xt.local",name:"xt.local",parentFolderType:"endsWith",subFolderType:"host",isIgnored:!1},{listId:"sparkpostmail.com",name:"sparkpostmail.com",parentFolderType:"endsWith",subFolderType:"host",isIgnored:!1},{listId:"list-id.mcsv.net",name:"list-id.mcsv.net",parentFolderType:"endsWith",subFolderType:"host",isIgnored:!1},{listId:"spc-",name:"sparkpostmail.com (spc-)",parentFolderType:"startsWith",subFolderType:"host",isIgnored:!1},{listId:"MAILING_LIST_GROUPS_UNCATEGORIZED",name:"",parentFolderType:"uncategorized",subFolderType:"host",isIgnored:!1}];var F=a(98),R=a(67),S=a(261),k=a(1),U=a(3);class T{constructor(e,t,a){var s,i,n;n=0,(i="count")in(s=this)?Object.defineProperty(s,i,{value:n,enumerable:!0,configurable:!0,writable:!0}):s[i]=n,this.version=e,this.interval=setInterval(()=>this.total&&b.d.setStatus(`Upgrade v${e} mail: ${t} ${this.count} / ${this.total}`),1e3),this.transaction=a}stop(){var e;clearInterval(this.interval),b.d.setStatus(`Upgrade v${this.version} mail: Finalizing...`,5e3),null===(e=this.transaction)||void 0===e||e._upgrades.add({version:this.version})}}p.a.on("populate",()=>{p.a.filters.bulkAdd(E.b),p.a.mailingList.bulkAdd(O),p.a._upgrades.add({version:p.a.verno})}),p.a.version(38).stores({messages:["[accountId+path+uid]","[accountId+path+hasRaw+uid]","[unTokenized+sentDate]"].join(","),tokens:"[accountId+path+uid],*tokens",searchList:["[accountId+path+uid]","internal","messageId","unFiltered","*viewIds"].join(","),threading:["[accountId+path+uid]","[unThreaded+accountId+path]","*references","inReplyTo","messageId"].join(","),mailboxCache:"[accountId+path],accountId",filters:"[accountId+path],unFiltered",buffer:"++_id,[accountId+path+uid+operation],accountId",folders:"accountId",views:"++_id,[accountId+path]"}).upgrade(e=>{e.messages.clear(),e.tokens.clear(),e.searchList.clear(),e.threading.clear(),e.folders.clear(),e.mailboxCache.clear(),e.filters.clear(),e.buffer.clear()}),p.a.version(39).upgrade(e=>{const t=["Feeds","",""],a=["Feeds","￿","￿"];e.messages.where("[accountId+path+uid]").between(t,a).delete(),e.tokens.where("[accountId+path+uid]").between(t,a).delete(),e.searchList.where("[accountId+path+uid]").between(t,a).delete(),e.threading.where("[accountId+path+uid]").between(t,a).delete()}),p.a.version(40).upgrade(e=>{const t=U.i,a=[t,""],s=[t,"￿"];e.filters.where("[accountId+path]").between(a,s).modify({unFiltered:1})}),p.a.version(41).upgrade(e=>{const t=new Map,a=U.i;function s(e){Array.isArray(e)&&e.forEach(e=>{if(!e||!e.address)return;const s=e.address.toLowerCase();if(!t.has(s)){const i=e.address,n={accountId:a,path:i,filterValue:{name:e.address,include:[[{from:[e]}],[{to:[e]}]]},unFiltered:1};t.set(s,n)}})}(function(){const t={};return e.folders.toArray().then(e=>(e.forEach(e=>{const{accountId:a,folders:s}=e;t[a]={};for(const e of Object.getOwnPropertyNames(s))for(const i of s[e])t[a][i.path]=i.type}),t))})().then(a=>{e.searchList.toArray().then(e=>{e.forEach(e=>{const{accountId:t,path:i}=e;if(a[t][i]===U.sb){const{to:t=[],cc:a=[],bcc:i=[]}=e;s([].concat(t,a,i))}else s(e.from)}),f.a.bulkAdd([...t.values()])})})}),p.a.version(42).upgrade(e=>{e.messages.toCollection().modify(e=>{delete e.flags})}),p.a.version(43).stores({messages:["[accountId+path+uid]","[unTokenized+sentDate]"].join(","),searchList:["[accountId+path+uid]","[accountId+path+hasRaw+internal+uid]","internal","messageId","unFiltered","*viewIds"].join(",")}).upgrade(e=>{const t={};e.messages.toCollection().modify(e=>{const{accountId:a,path:s,uid:i,hasRaw:n,size:o}=e;t[a]||(t[a]={}),t[a][s]||(t[a][s]={}),t[a][s][i]={hasRaw:n,size:o},delete e.hasRaw}).then(()=>{e.searchList.toCollection().modify(e=>{const{accountId:a,path:s,uid:i}=e,n=t[a]&&t[a][s]&&t[a][s][i];n&&(e.hasRaw=n.hasRaw,e.size=n.size)})})}),p.a.version(44).upgrade(e=>{const t=[];e.searchList.filter(e=>!e.flags).each(e=>{const{accountId:a,path:s,uid:i}=e;t.push([a,s,i])}).then(()=>{p.a.transaction("rw",[e.searchList,e.messages,e.threading,e.tokens],()=>{e.searchList.where("[accountId+path+uid]").anyOf(t).delete(),e.messages.where("[accountId+path+uid]").anyOf(t).delete(),e.threading.where("[accountId+path+uid]").anyOf(t).delete(),e.tokens.where("[accountId+path+uid]").anyOf(t).delete()})})}),p.a.version(45).upgrade(e=>{e.filters.toArray().then(t=>{const a=t.map(e=>{const{accountId:t,path:a}=e;return{accountId:t,path:a,type:U.Y}});e.views.bulkPut(a)}),e.searchList.toCollection().modify({unFiltered:1})}),p.a.version(46).upgrade(e=>{e.filters.where("unFiltered").equals(0).modify(e=>{delete e.unFiltered})}),p.a.version(47).stores({drafts:"++id"}).upgrade(e=>{const t=[];e.messages.where("[accountId+path+uid]").between([U.c,"",0],[U.c,"￿",1/0]).modify(e=>{const{accountId:a,path:s,uid:i,bcc:n,bodyParts:o}=e;(n||o)&&(t.push({accountId:a,path:s,uid:i,bcc:n,bodyParts:o}),delete e.bcc,delete e.bodyParts)}).then(()=>e.drafts.bulkAdd(t))}),p.a.version(49).stores({searchList:["[accountId+path+uid]","[accountId+path+hasRaw+internal+uid]","[internal+accountId+path+uid]","messageId","unFiltered","*viewIds"].join(",")}).upgrade(e=>{const t=U.i,a=[t,""],s=[t,"￿"],i=[],n=[];function o(e){return{accountId:U.i,path:e.address,filterValue:{name:e.address,include:[[{from:[e]}],[{to:[e]}]]},unFiltered:1}}function r(e){for(let t=0;t<e.length;t++){const{include:a}=e[t].filterValue;if(a){const e=[].concat(...a);for(let t=0;t<e.length;t++){const{from:a=[],to:s=[]}=e[t],i=[].concat(a,s).find(e=>void 0!==e.name);if(i)return i.name}}}}e.filters.where("[accountId+path]").between(a,s).toArray(e=>{const t=new Map;e.forEach(e=>{const a=e.path.toLowerCase();t.has(a)?t.get(a).push(e):t.set(a,[e])}),t.forEach((e,t)=>{if(1===e.length){const[a]=e;if(a.path!==t){i.push([a.accountId,a.path]);const e=o({name:r([a]),address:t});n.push(e)}else{const{name:s,include:d}=a.filterValue,c=d.some(e=>e.some(e=>void 0!==e.cc));if(void 0===s||c){i.push([a.accountId,a.path]);const s=o({name:r(e),address:t});n.push(s)}}}else{e.forEach(e=>{i.push([e.accountId,e.path])});const a=o({name:r(e),address:t});n.push(a)}})}).then(()=>e.filters.where("[accountId+path]").anyOf(i).delete()),e.on("complete",()=>{p.a.transaction("rw",[e.filters],()=>{e.filters.bulkAdd(n)})})}),p.a.version(50).stores({drafts2:"id",messages2:"[accountId+path+uid]",searchList2:"[accountId+path+uid]",threading2:"[accountId+path+uid]",tokens:null}).upgrade(e=>Promise.all(["drafts","searchList","messages","threading"].map(t=>e[t].each(a=>e[t+"2"].add(a))))),p.a.version(51).stores({drafts:null,messages:null,searchList:null,threading:null}),p.a.version(52).stores({messages:["++id","&[accountId+path+uid]","[unTokenized+sentDate]"].join(","),tokens:"id,&[accountId+path+uid],*tokens",searchList:["++id","&[accountId+path+uid]","[accountId+path+hasRaw+internal+uid]","[internal+accountId+path+uid]","messageId","unFiltered","*viewIds"].join(","),threading:["++id","&[accountId+path+uid]","[unThreaded+accountId+path]","*references","inReplyTo","messageId"].join(","),drafts:"id"}).upgrade(e=>{const t=[];e.searchList2.each(t=>e.searchList.add(t)).then(()=>e.threading2.each(t=>e.threading.add(t))).then(()=>e.messages2.each(t=>(t.unTokenized=1,e.messages.add(t)))).then(()=>e.drafts2.each(a=>{const{accountId:s,path:i,uid:n}=a;return e.messages.where("[accountId+path+uid]").equals([s,i,n]).each(e=>{t.push({...a,id:e.id})})})).then(()=>{e.drafts.clear(),e.drafts.bulkAdd(t)})}),p.a.version(56).stores({drafts:null,drafts2:null,messages2:null,searchList2:null,threading2:null,imap:"[accountId+path+uid],searchListId"}).upgrade((function(e){e.searchList.toArray().then(t=>t.forEach(t=>{const{id:a,accountId:s,path:i,uid:n,flags:o,internal:r}=t;r||[U.c,U.n].includes(s)||e.imap.put({accountId:s,path:i,uid:n,searchListId:a}),e.messages.update(a,{flags:o})}))})),p.a.version(57).stores({filters2:"[accountId+path]",views2:"_id,[accountId+path]"}).upgrade(e=>(b.d.setStatus("Upgrade v57 mail: Copy view and filter tables",5e3),Promise.all(["filters","views"].map(t=>e[t].each(a=>e[t+"2"].add(a)))))),p.a.version(58).stores({filters:null,views:null}),p.a.version(59).stores({filters:"++id,&[accountId+path],unFiltered",views:"++id,filterId",drafts:"id"}).upgrade(e=>{b.d.setStatus("Upgrade v59 mail: Change view table to PK",5e3),e.filters2.each(t=>{e.filters.add(t),e.views2.where("[accountId+path]").equals([t.accountId,t.path]).each(a=>{a.id=a._id,delete a._id,delete a.accountId,delete a.path,a.filterId=t.id,e.views.add(a)})})}),p.a.version(61).stores({filters2:null,views2:null}).upgrade((function(e){b.d.setStatus("Upgrade v61 mail: Move all mailing lists to Other folder",5e3);const t=U.F,a=[t,""],s=[t,"￿"],i=[];e.filters.where("[accountId+path]").between(a,s).modify(e=>{if(e.path!==U.m&&e.path!==U.fb){const t=e.path.startsWith(U.fb)?e.path:U.fb+"/"+e.path;i.push(e.filterValue.include[0]);const a=e.filterValue||{};e.path=t,e.filterValue={...a,showMailingListsButton:!1,showFeedsButton:!1,showFeeds:!1,showMailingLists:!0}}else e.filterValue.showSubfolders=!0}).then(()=>{e.filters.where("[accountId+path]").anyOf([[t,U.fb],[t,U.m]]).modify(e=>{e.filterValue.include=i,e.unFiltered=1})}).then(()=>b.d.setStatus("Upgrade v61 mail: Finished",5e3))})),p.a.version(63).stores({drafts:null,filteringQueue:"++id,priority"}).upgrade((function(e){const t={},a=[];b.d.setStatus("Upgrade v63 mail: Generating filtering queue",5e3);const s=new T(63,"Generating filtering queue");e.searchList.where("unFiltered").aboveOrEqual(0).count().then(e=>{s.total=e}),e.searchList.where("unFiltered").aboveOrEqual(0).until((function(){return s.count++,!1})).modify(e=>{const{id:a,accountId:s,path:i,unFiltered:n}=e;n>0&&(t[s]||(t[s]={}),t[s][i]||(t[s][i]=[]),t[s][i].push(a)),delete e.unFiltered}).then(()=>{Object.keys(t).forEach(e=>{Object.keys(t[e]).forEach(a=>{const s=t[e][a];Object(I.a)({type:"FILTERS_SLES",priority:U.p.LOW,folderIds:[[e,a]],searchListIds:s,runAllMessages:!0,runMailingLists:!0,runFlagFolders:!0,runLabels:!0,runQueries:!0,runContacts:!0,runSingleThread:!0})})})}).then(()=>{s.stop()}),e.filters.where("unFiltered").aboveOrEqual(0).modify(e=>{e.unFiltered>0&&a.push(e.id),delete e.unFiltered}).then(()=>{a.length>0&&Object(I.a)({type:"RUN_FILTERS",priority:U.p.LOW,filterIds:a})})})),p.a.version(65).stores({searchList:["++id","&[accountId+path+uid]","[accountId+path+hasRaw+internal+uid]","[internal+accountId+path+uid]","messageId","*viewIds"].join(","),filters:"++id,&[accountId+path]",tokens:"id,*tokens"}).upgrade((function(e){const t=new T(65,"Updating tokens");e.tokens.count().then(e=>{t.total=e}),e.tokens.toCollection().modify(e=>{delete e.accountId,delete e.path,delete e.uid,t.count++}).then(()=>{t.stop()})})),p.a.version(66).stores({threading:["++id","unThreaded","*references","inReplyTo","messageId"].join(",")}).upgrade((function(e){const t=new T(66,"Updating threading");e.threading.count().then(e=>{t.total=e}),e.threading.toCollection().modify(e=>{delete e.accountId,delete e.path,delete e.uid,t.count++}).then(()=>{t.stop()})})),p.a.version(67).stores({threadingQueue:"++id"}).upgrade((function(e){const t=new T(67,"Removing unThreaded"),a=[];e.threading.where("unThreaded").aboveOrEqual(0).count().then(e=>{t.total=e}).then(()=>e.threading.where("unThreaded").aboveOrEqual(0).modify(e=>{e.unThreaded>0&&a.push(e.id),delete e.unThreaded,t.count++})).then(()=>{if(a.length>0)return Object(v.a)(a)}).then(()=>{t.stop()})})),p.a.version(69).stores({threading:["++id","*references","inReplyTo","messageId"].join(",")}).upgrade((function(e){const t=new T(69,"Updating");e.searchList.count().then(e=>{t.total=e}).then(()=>e.filters.toArray()).then(a=>{const s={};return a.forEach(e=>{const{accountId:t,path:a}=e;s[t]=s[t]||{},s[t][a]=e}),e.searchList.toCollection().modify(e=>{const{accountId:a,path:i}=e,n=s[a]&&s[a][i];e.sourceFilterIds=n?new Set([n.id]):new Set,t.count++})}).then(()=>{t.stop()})})),p.a.version(70).stores({searchList:["++id","&[accountId+path+uid]","[internal+accountId+path+uid]","messageId","*viewIds"].join(","),imap:["[accountId+path+uid]","searchListId","[accountId+path+hasRaw+uid]"].join(",")}).upgrade((function(e){const t=new T(70,"Updating"),a=new Map;w.a.Promise.all([e.searchList.count(),e.imap.count()]).then(e=>{t.total=e.reduce((e,t)=>e+t)}).then(()=>e.searchList.toCollection().modify(e=>{const{id:s,hasRaw:i,size:n}=e;a.set(s,{hasRaw:i,size:n}),delete e.hasRaw,delete e.size,t.count++})).then(()=>e.imap.toCollection().modify(e=>{const s=a.get(e.searchListId);if(!s)return void console.warn("imap update not found for "+JSON.stringify(e));const{hasRaw:i,size:n}=s;e.hasRaw=i,e.size=n,t.count++})).then(()=>{t.stop()})})),p.a.version(71).stores({messages:["++id","[unTokenized+sentDate]"].join(","),searchList:["++id","messageId","*viewIds","*sourceFilterIds"].join(",")}).upgrade((function(e){const t=new T(71,"Updating");w.a.Promise.all([e.searchList.count(),e.messages.count()]).then(e=>{t.total=e.reduce((e,t)=>e+t)}).then(()=>e.searchList.toCollection().modify(e=>{e.sourceFilterIds=[...e.sourceFilterIds.values()],delete e.accountId,delete e.path,delete e.uid,t.count++})).then(()=>e.messages.toCollection().modify(e=>{delete e.accountId,delete e.path,delete e.uid,t.count++})).then(()=>{t.stop()})})),p.a.version(72).upgrade((function(){Object(I.a)({priority:U.p.LOW,type:"RUN_FILTERS",folderIds:[[U.c,U.rb]]})})),p.a.version(73).upgrade(e=>e.searchList.toCollection().modify(e=>delete e.cc)),p.a.version(75).stores({accounts:"accountId"}).upgrade((function(e){e.folders.toArray().then(t=>{t.forEach(t=>{e.accounts.put({...t,capability:[]})})})})),p.a.version(78).stores({messages:["++id","[unTokenized+sentDate]","gmailId"].join(","),tokens:"id,*tokens",folders:null}).upgrade(async e=>{const t=new T(78,"Updating");t.total=await e.searchList.count(),await e.searchList.toCollection().modify(e=>{e.to=e.to.slice(0,2),t.count++}),t.stop()}),p.a.version(79).upgrade(async e=>{const t=new T(79,"Updating");t.total=2*await e.searchList.count(),await e.searchList.toCollection().modify(e=>{delete e.forwarded,t.count++}),await e.messages.toCollection().modify(e=>{"number"!=typeof e.forwarded&&delete e.forwarded,t.count++}),t.stop()}),p.a.version(80).upgrade(async e=>{const t=new T(80,"Updating");t.total=await e.searchList.count(),await e.searchList.toCollection().modify(e=>{delete e.listId,t.count++}),t.stop()}),p.a.version(83).stores({pop:"[accountId+uidl],searchListId"}).upgrade(async e=>{const t=new T(83,"Updating");t.total=await e.filters.count();const a=await e.accounts.toArray(),s={};a.forEach(e=>{const{accountId:t,folders:a}=e;a&&(s[t]={},Object.getOwnPropertyNames(a).forEach(e=>{a[e].forEach(e=>{const{path:a,type:i}=e;s[t][a]=i})}))}),await e.filters.toCollection().modify(e=>{const{accountId:t,path:a,filterValue:i}=e;t===U.n&&(i.showFeeds=!0,i.showFeedsButton=!1,i.showMailingLists=!0,i.showMailingListsButton=!1),t===U.F&&(i.showMailingListsButton=!1,i.showFeedsButton=!1);const n=s[t]&&s[t][a];switch(void 0!==n&&(i.showFeedsButton=!1),n){case U.sb:case U.l:i.showReadButton=!1;break;case U.wb:i.showDeletedButton=!1,i.exclude&&(i.exclude=i.exclude.filter(e=>!(Array.isArray(e)&&1===e.length&&Array.isArray(e[0].flags)&&1===e[0].flags.length&&"\\Deleted"===e[0].flags[0])),0===i.exclude.length&&delete i.exclude)}}),t.stop()}),p.a.version(84).upgrade(async e=>{const t=new T(84,"Fixing message table");t.total=await e.searchList.count(),await e.messages.toCollection().modify(e=>{e.from=e.from||[],e.to=e.to||[],e.cc=e.cc||[],e.replyTo=e.replyTo||[],e.listId=e.listId||"",t.count++}),t.stop()}),p.a.version(85).upgrade(async e=>{b.d.setStatus("Upgrade v85 mail: Adding Spam folder to All Messages");const t=y.b.getAllViewTypes(),a=E.b.find(e=>e.path===U.C);if(a){const s=await e.filters.add(a);for(const a of t)await e.views.add({filterId:s,type:a});await Object(I.a)({type:"RUN_FILTERS",priority:U.p.LOW,filterIds:[s]})}b.d.setStatus("(Finished) Upgrade v85 mail: Adding Spam folder to All Messages",5e3)}),p.a.version(86).stores({imap:["[accountId+path+uid]","searchListId","[accountId+path+hasRaw+uid]","[accountId+path+searchListId]","accountId"].join(","),pop:"[accountId+uidl],searchListId,accountId"}).upgrade(async e=>{const t=new T(86,"Upgrading message sources");t.total=await e.searchList.count(),await e.searchList.toCollection().modify(e=>{const a=!!e.internal,s=e.flags.includes(U.O.DELETED);e.sources=new Map,e.sourceFilterIds.forEach(t=>{e.sources.set(t,{deleted:s,internal:a})}),delete e.internal,e.flags=e.flags.filter(e=>e!==U.O.DELETED),t.count++}),t.stop()}),p.a.version(87).upgrade(async e=>{const t=new T(87,"VB-55503 Flattening MailAddressList properties");t.total=2*await e.searchList.count(),await e.searchList.toCollection().modify(e=>{e.from=Object(F.b)(...e.from),e.to=Object(F.b)(...e.to),t.count++}),await e.messages.toCollection().modify(e=>{e.bcc&&(e.bcc=Object(F.b)(...e.bcc)),e.cc=Object(F.b)(...e.cc),e.from=Object(F.b)(...e.from),e.replyTo=Object(F.b)(...e.replyTo),e.to=Object(F.b)(...e.to),t.count++}),t.stop()}),p.a.version(88).stores({searchList:["++id","messageId","*sourceFilterIds"].join(","),viewIds:"searchListId,*viewIds"}).upgrade(async e=>{const t=new T(88,"Moving message viewIds");t.total=await e.searchList.count();const a=[];await e.searchList.toCollection().modify(e=>{a.push({searchListId:e.id,viewIds:e.viewIds}),delete e.viewIds,t.count++}),await e.viewIds.bulkAdd(a),t.stop()}),p.a.version(90).stores({messages:["++id","gmailId"].join(",")}).upgrade(async e=>{const t=new T(90,"Migrating buffer entries");t.total=await e.buffer.count(),await e.buffer.toCollection().modify(e=>{"SetCustomFlag"===e.operation?(e.operation="BUFFER_OPERATION_CUSTOM_FLAG",e.flagUpdates=e.params):"Delete"===e.operation?e.operation="BUFFER_OPERATION_DELETE":"Move"===e.operation?(e.operation="BUFFER_OPERATION_MOVE",e.destinationPath=e.params):"UploadMessage"===e.operation&&(e.operation="BUFFER_OPERATION_UPLOAD_MESSAGE",e.message=e.params),delete e.params,t.count++}),t.stop()}),p.a.version(91).upgrade(async e=>{const t=new T(91,"Removing extra viewIds");t.total=await e.viewIds.count();const[a,s]=await w.a.Promise.all([e.searchList.toCollection().primaryKeys(),e.viewIds.toCollection().primaryKeys()]),i=new Set(a),n=s.filter(e=>!i.has(e));await e.viewIds.bulkDelete(n),t.stop()}),p.a.version(92).upgrade(async e=>{const t=new T(92,"Migrating buffer entries");t.total=await e.buffer.count(),await e.buffer.toCollection().modify(e=>{"BUFFER_OPERATION_DELETE"===e.operation&&(e.operation="BUFFER_OPERATION_DELETE_IMAP"),t.count++}),t.stop()}),p.a.version(93).upgrade(async e=>{function t(e,t){return e>t?1:e<t?-1:0}const a=new T(93,"Re-sort tokens");a.total=await e.tokens.count(),await e.tokens.toCollection().modify(e=>{e.tokens=e.tokens.sort(t),a.count++}),a.stop()}),p.a.version(95).stores({buffer:["++_id","[accountId+path+uid+operation]","accountId","[accountId+path+uid]","operation"].join(",")}).upgrade(async e=>{const t=new T(95,"Drafts storage change");t.total=await e.messages.count();const a=document.createElement("iframe");a.setAttribute("style","position:fixed; z-index:-1"),document.body&&document.body.appendChild(a);const s=a.contentDocument;await e.messages.toCollection().modify(e=>{const{bodyParts:a}=e;if(a){let t;if("text"===a[0].type){s.body&&s.body.remove();const e=s.documentElement;e&&e.append(document.createElement("body"));const i=s.body;i&&(i.innerText=a[0].content,t=[{...a[0],content:i.innerHTML,type:"html"},...a.slice(1,a.length)])}else a.length>1&&"html"===a[0].type&&"text"===a[1].type&&(t=[a[0],...a.slice(2,a.length)]);t&&(e.bodyParts=t)}t.count++}),a.remove(),t.stop()}),p.a.version(96).upgrade(async e=>{const t=new T(96,"Remove flags from messages");t.total=2*await e.searchList.count();const a=new Map;await e.messages.toCollection().modify(async e=>{const s=e.flags.filter(e=>e!==U.O.DELETED);a.set(e.id,s),delete e.flags,t.count++}),await e.searchList.toCollection().modify(async e=>{const s=a.get(e.id);s?e.flags=s||e.flags:console.warn("M3 upgrade 96 - flags not found for "+e.id),t.count++}),t.stop()}),p.a.version(97).upgrade(async e=>{const t=new T(97,"Delete old groupon/meetup mailing lists"),a=[],s=[],i=[];if((await e.filters.where("[accountId+path]").between([U.F,""],[U.F,"￿"]).toArray()).forEach(e=>{e.path!==U.fb&&e.path!==U.t&&e.filterValue.include&&e.filterValue.include.length>0&&e.filterValue.include[0]&&e.filterValue.include[0][0]&&e.filterValue.include[0][0].listIds&&e.filterValue.include[0][0].listIds.some(e=>e.endsWith(".groupon")||e.endsWith(".meetup.com"))&&a.push(e.id)}),a.length>0){(await e.views.where("filterId").anyOf(a).toArray()).forEach(e=>{s.push(e.id),"total"===e.type&&i.push(e.id)});const n=[];t.total=await e.viewIds.where("viewIds").anyOf(i).count(),await e.viewIds.where("viewIds").anyOf(i).modify(e=>{t.count++,e.viewIds=e.viewIds.filter(t=>!s.includes(t)||(n.push(e.searchListId),!1))}),await e.views.where("filterId").anyOf(a).delete(),await e.filters.where("id").anyOf(a).delete(),t.stop();const o=new T(97,"Make single folder for groupon/meetup mailing lists"),r=await e.messages.where("id").anyOf(n).toArray(),d=await h.a.createMailingListFilters(r),c=y.b.getAllViewTypes();o.total=d.length*c.length;for(const t of d)for(const a of c)await e.views.add({filterId:t.id,type:a}),o.count++;await Object(I.a)({type:"RUN_FILTERS",priority:U.p.LOW,filterIds:d.map(e=>e.id)}),await Object(I.a)({type:"RUN_FILTERS",priority:U.p.LOW,folderIds:[[U.F,U.fb]]}),o.stop()}}),p.a.version(98).upgrade(async e=>{b.d.setStatus("Upgrade v98 mail: Mailing lists fix facebook/google parent folder",5e3);const t=["groups.facebook.com","google.com"];for(const a of t){const t=await e.filters.where("[accountId+path]").between([U.F,`Other Mailing Lists/${a}/`],[U.F,`Other Mailing Lists/${a}/￿`]).toArray(),s=[];t.forEach(e=>{e.filterValue.include&&e.filterValue.include.length>0&&e.filterValue.include[0]&&e.filterValue.include[0][0]&&e.filterValue.include[0][0].listIds&&s.push(...e.filterValue.include[0][0].listIds)}),s.length>0&&(await e.filters.where("[accountId+path]").equals([U.F,U.fb+`/${a}`]).modify(e=>{e.filterValue.include[0][0].listIds=s}),await Object(I.a)({type:"RUN_FILTERS",priority:U.p.LOW,folderIds:[[U.F,U.fb+`/${a}`]]}))}b.d.setStatus("(Finished) Upgrade v98 mail: Mailing lists fix facebook/google parent folder",5e3)}),p.a.version(99).upgrade(async e=>{const t=new T(99,"Cleaning up viewIds");t.total=2*await e.viewIds.count();const a=[];await e.viewIds.toCollection().modify(async e=>{const{searchListId:s,viewIds:i}=e,n=new Set(i);n.size!==i.length&&(e.viewIds=[...n],a.push(s)),t.count++}),await Object(I.a)({type:"RE_RUN_SLES",priority:U.p.LOW,searchListIds:a}),t.stop()}),p.a.version(100).upgrade(async e=>{b.d.setStatus("Upgrade v100 mail: Clean broken filter in other mailing lists",5e3);let t=!1;await e.filters.where("[accountId+path]").equals([U.F,U.fb]).modify(async e=>{if(e.filterValue.include&&e.filterValue.include.length>0&&e.filterValue.include[0]&&e.filterValue.include[0][0]&&e.filterValue.include[0][0].listIds){const a=e.filterValue.include[0][0].listIds.indexOf("");-1!==a&&(e.filterValue.include[0][0].listIds.splice(a,1),t=!0)}}),t&&await Object(I.a)({type:"RUN_FILTERS",priority:U.p.LOW,folderIds:[[U.F,U.fb]]})}),p.a.version(102).stores({flaggingQueue:"++id"}).upgrade(async e=>{const t=new T(102,"Refactor filters");t.total=await e.filters.count(),await e.filters.toCollection().modify(e=>{["include","exclude"].forEach(t=>{e.filterValue[t]&&e.filterValue[t].forEach((a,s)=>{a.forEach((a,i)=>{if(Object.keys(a).length>1||Array.isArray(Object.values(a)[0]))for(const n in a){if(Array.isArray(a[n])){let i=n;"listIds"===n?i="listId":"flags"===n&&(i="flag"),a[n].forEach(a=>{e.filterValue[t][s].push({[i]:a})})}else e.filterValue[t][s].push({[n]:a[n]});e.filterValue[t][s][i]=void 0}}),e.filterValue[t][s]=e.filterValue[t][s].filter(e=>e)})}),t.count++}),t.stop()}),p.a.version(103).stores({buffer:["++_id","[accountId+path+operation]","accountId","[accountId+path]","operation"].join(",")}).upgrade(async e=>{const t=new T(103,"Updating buffer entries");t.total=await e.buffer.count(),await e.buffer.toCollection().modify(async e=>{void 0!==e.uid&&(e.uids=[e.uid],delete e.uid),t.count++}),t.stop()}),p.a.version(104).upgrade(async e=>{b.d.setStatus("Upgrade v104 mail: Mailing lists fix custom subfolder names",5e3),await e.filters.where("[accountId+path]").between([U.F,""],[U.F,"￿"]).modify(async e=>{const t=e.filterValue.name;e.filterValue.name=t.slice(t.lastIndexOf("/")+1)})}),p.a.version(105).upgrade(async e=>{b.d.setStatus("Upgrade v105 mail: Fetching filters...",5e3);const t=await e.filters.toArray();b.d.setStatus("Upgrade v104 mail: Creating Junk views...",5e3);const a=t.map(e=>({filterId:e.id,type:U.W}));await e.views.bulkAdd(a),b.d.setStatus("Upgrade v105 mail: Updating filters...",5e3),await e.filters.where("[accountId+path]").equals([U.c,U.C]).modify(e=>{const{filterValue:t}=e;t.include.push([{flag:"\\Junk"}]),t.showJunkButton=!1}),await e.filters.where("[accountId+path]").equals([U.n,U.m]).modify(e=>{const{filterValue:t}=e;t.exclude.push([{folder:U.D}]),t.exclude.push([{flag:"\\Junk"}]),t.showJunkButton=!1}),b.d.setStatus("Upgrade v105 mail: Fetching message IDs...",5e3);const s=await e.searchList.toCollection().keys();for(s.reverse(),b.d.setStatus("Upgrade v105 mail: Requesting re-filtering...",5e3);s.length>0;){const t=s.splice(0,5e3);await e.filteringQueue.add({priority:U.p.LOW,type:"RE_RUN_SLES",searchListIds:t})}b.d.setStatus("Upgrade v105 mail: Done",5e3)}),p.a.version(106).upgrade(async e=>{await e.filters.where("[accountId+path]").between([U.F,""],[U.F,"￿"]).modify(e=>{if(e.filterValue.include){const t=new Set,a=new Set;e.filterValue.include.forEach((e,s)=>{e.forEach(e=>{e.listId?t.add(e.listId):e.senderIsMailingList&&a.add(e.senderIsMailingList)})});const s=[];t.forEach(e=>s.push([{listId:e}])),a.forEach(e=>s.push([{senderIsMailingList:e}])),e.filterValue.include=s}})}),p.a.version(107).upgrade(async e=>{b.d.setStatus("Upgrade v107 mail: Split up flags and labels...",5e3);const t=y.b.getAllViewTypes();await e.filters.where("[accountId+path]").anyOf([U.E,U.m],[U.E,U.O.RED],[U.E,U.O.ORANGE],[U.E,U.O.YELLOW],[U.E,U.O.GREEN],[U.E,U.O.BLUE],[U.E,U.O.PURPLE],[U.E,U.O.GRAY]).modify(e=>{e.accountId=U.q});const a=Object(L.a)(E.b).find(e=>e.accountId===U.E),s=[];if(await e.filters.where("[accountId+path]").between([U.E,""],[U.E,"￿"]).each(e=>{s.push(...e.filterValue.include)}),a){a.filterValue.include=s;const i=await e.filters.add(a);t.forEach(t=>e.views.add({filterId:i,type:t})),await e.filteringQueue.add({priority:U.p.LOW,type:"RUN_FILTERS",filterIds:[i],folderIds:[U.q,U.m]})}b.d.setStatus("Upgrade v107 mail: Done",5e3)}),p.a.version(108).upgrade(async e=>{b.d.setStatus("Upgrade v108 mail: Refresh Flag folders...",5e3),await e.filteringQueue.add({priority:U.p.LOW,type:"RUN_FILTERS",folderIds:[[U.q,U.m],[U.q,U.O.RED],[U.q,U.O.ORANGE],[U.q,U.O.YELLOW],[U.q,U.O.GREEN],[U.q,U.O.BLUE],[U.q,U.O.PURPLE],[U.q,U.O.GRAY]],updateFilters:!0})}),p.a.version(109).upgrade(async e=>{b.d.setStatus("Upgrade v109 mail: Fixing some filters...",5e3);const t=await e.accounts.toCollection().keys(),a=[];await e.filters.toCollection().modify(e=>{const{id:s,accountId:i,path:n,filterValue:o}=e;if(!t.includes(i))return;const{include:r}=o;r&&r.forEach(e=>{1===e.length&&e[0].path===n&&(e.push({accountId:i}),a.push(s))})}),a.length>0&&await e.filteringQueue.add({priority:U.p.LOW,type:"RUN_FILTERS",filterIds:a})}),p.a.version(110).upgrade(async e=>{b.d.setStatus("Upgrade v110 mail: Import labels from other clients",5e3);const t=await e.searchList.toArray(),a=new T(110,"Upgrade v110 mail: Get new labels mails");a.total=t.length;const s=[],i=new Set;if(t.map(e=>{Object(R.l)(e.flags)&&(s.push(e.id),Object(R.e)(e.flags).forEach(e=>{i.add(e)})),a.count++}),a.stop(),i.size>0){const t=await e.filters.where("[accountId+path]").between([U.E,""],[U.E,"￿"]).toArray(),a=[...i].filter(e=>!t.some(t=>t.path===e)),n={include:[]};if(a.length>0){const t=a.map(e=>{const t=[{flag:e}];return n.include.push(t),{accountId:U.E,path:e,filterValue:{name:Object(R.h)(e),include:[t]}}});b.d.setStatus(`Upgrade v110 mail: Adding ${t.length} new labels`,5e3),await e.filters.bulkAdd(t);const i=t.map(e=>[e.accountId,e.path]),o=await e.filters.where("[accountId+path]").anyOf(i).primaryKeys(),r=y.b.getAllViewTypes();o.forEach(t=>{r.forEach(a=>e.views.add({filterId:t,type:a}))}),await e.filters.where("[accountId+path]").equals([U.E,U.m]).modify(e=>{const{filterValue:t}=e;n.include&&(t.include?t.include=t.include.concat(n.include):t.include=n.include)}),Object(I.a)({type:"RE_RUN_SLES",priority:U.p.LOW,folderIds:[...t.map(e=>[e.accountId,e.path]),[U.E,U.m]],searchListIds:s})}}b.d.setStatus("Upgrade v110 mail: [Done] Import labels from other clients",5e3)}),p.a.version(111).upgrade(async e=>{b.d.setStatus("Upgrade v111 mail: Updating Junk filtering...",5e3);const t=await e.accounts.toArray(),a=new Map;t.forEach(e=>{const{accountId:t,folders:s}=e,i=new Map;a.set(t,i),Object.keys(s).forEach(e=>{s[e].forEach(t=>{i.set(t.path,e)})})}),await e.filters.toCollection().modify(e=>{const{accountId:t,path:s,filterValue:i}=e;if(i.include&&(i.include=i.include.map(e=>e.filter(e=>void 0===e.flag||"\\Junk"!==e.flag)).filter(e=>e.length>0),0===i.include.length&&delete i.include),i.exclude&&(i.exclude=i.exclude.map(e=>e.filter(e=>void 0===e.flag||"\\Junk"!==e.flag)).filter(e=>e.length>0),0===i.exclude.length&&delete i.exclude),t===U.c&&s===U.vb){if(i.exclude){i.exclude.some(e=>1===e.length&&e[0].folder===U.D)||i.exclude.push([{folder:U.D}])}else i.exclude=[[{folder:U.D}]];i.showJunkButton=!1}const n=a.get(t);n&&n.get(s)===U.D&&(i.include?y.b.shouldIncludeAccountFolderType(i,t,U.D)||i.include.push([{accountId:t},{folder:U.D}]):i.include=[[{accountId:t},{folder:U.D}]])})}),p.a.version(112).upgrade(async e=>{const t=(await e.buffer.where("operation").equals("BUFFER_OPERATION_CUSTOM_FLAG").toArray()).filter(e=>e.flagUpdates.hasOwnProperty(U.O.RECENT));if(t.length>0){const a=t.map(e=>e._id);await e.buffer.where("_id").anyOf(a).modify(e=>{delete e.flagUpdates[U.O.RECENT]})}}),p.a.version(113).upgrade(async e=>{b.d.setStatus("Upgrade v113 mail: Adding counter to root folder of accounts",5e3);const t=(await e.accounts.toCollection().keys()).map(e=>[e,U.m]);e.filters.where("[accountId+path]").anyOf(t).modify(e=>{e.filterValue.include&&e.filterValue.include.forEach((t,a)=>{e.filterValue.include[a]=t.filter(e=>e.path!==U.m)})}),await e.filteringQueue.add({priority:U.p.LOW,type:"RUN_FILTERS",folderIds:t,updateFilters:!0})}),p.a.version(114).upgrade(async e=>{b.d.setStatus("Upgrade v114 mail: Fixing empty root paths of Important/Feeds/Labels/Filters",5e3);const t=[];e.filters.where("[accountId+path]").anyOf([[U.M,U.m],[U.n,U.m],[U.E,U.m],[U.F,U.m],[U.F,U.t],[U.F,U.fb]]).modify(e=>{e.filterValue.include||(e.filterValue.include=[],t.push(e.id))});const a=[[U.q,U.m],[U.q,U.O.RED],[U.q,U.O.ORANGE],[U.q,U.O.YELLOW],[U.q,U.O.GREEN],[U.q,U.O.BLUE],[U.q,U.O.PURPLE],[U.q,U.O.GRAY]];e.filteringQueue.add({priority:U.p.LOW,type:"RUN_FILTERS",filterIds:t,folderIds:a,updateFilters:!0})}),p.a.version(115).upgrade(async e=>{b.d.setStatus("Upgrade v115 mail: Rerunning Labels/Flags filters since they we're updating correctly",5e3);const t=await e.filters.where("[accountId+path]").between([U.E,""],[U.E,"￿"]).primaryKeys(),a=[[U.E,U.m]];e.filteringQueue.add({priority:U.p.LOW,type:"RUN_FILTERS",filterIds:t,folderIds:a,updateFilters:!0})}),p.a.version(116).upgrade(async e=>{const t=new T(116,"Upgrade v116 mail: Re-allocating read/unread flags");t.total=await e.searchList.count();const a=await async function(){const t=[],a=await e.accounts.toArray();for(const e of a){const{accountId:a,folders:s}=e,i=s[U.sb];if(i)for(const e of i)t.push([a,e.path])}const s=await e.filters.where("[accountId+path]").anyOf(t).primaryKeys();return new Set(s)}(),s=new Set;await e.searchList.toCollection().modify(e=>{const{id:i,flags:n,sources:o}=e,r=n.findIndex(e=>e===U.O.SEEN),d=r>=0;d&&n.splice(r,1);for(const[e,t]of o)a.has(e)?(t.read=!0,d||s.add(i)):t.read=d;t.count++}),Object(I.a)({type:"RE_RUN_SLES",priority:U.p.LOW,searchListIds:[...s],updateFilters:!0}),t.stop()}),p.a.version(117).upgrade(async e=>{b.d.setStatus("Upgrade v117 mail: Rerunning Labels/Flags filters since they we're updating correctly from other clients",5e3);const t=await e.filters.where("[accountId+path]").between([U.E,""],[U.E,"￿"]).primaryKeys(),a=[[U.E,U.m],[U.q,U.m],[U.q,U.O.RED],[U.q,U.O.ORANGE],[U.q,U.O.YELLOW],[U.q,U.O.GREEN],[U.q,U.O.BLUE],[U.q,U.O.PURPLE],[U.q,U.O.GRAY]];e.filteringQueue.add({priority:U.p.LOW,type:"RUN_FILTERS",filterIds:t,folderIds:a})}),p.a.version(118).upgrade(async e=>{b.d.setStatus("Upgrade v118 mail: Deleting NonJunk from label (VB-70563)",5e3),await e.filters.where("[accountId+path]").equals([U.E,"NonJunk"]).delete(),await e.filters.where("[accountId+path]").equals([U.E,U.m]).modify(e=>{if(e.filterValue.include){const t=e.filterValue.include;e.filterValue.include=t.filter(e=>e.some(e=>"NonJunk"!==e.flag))}}),e.filteringQueue.add({priority:U.p.LOW,type:"RUN_FILTERS",folderIds:[[U.E,U.m]]})}),p.a.version(119).upgrade(async e=>{const t=new T(119,"Attachment count");t.total=await e.searchList.count(),await e.searchList.toCollection().modify(async e=>{e.attachment=e.attachment?2048:0,t.count++}),t.stop()}),p.a.version(120).upgrade(async e=>{const t=new T(120,"Read mail should always be seen");t.total=await e.searchList.count(),await g.a.initFilters(),await e.searchList.toCollection().modify(async e=>{e.unseen&&Object(m.a)(e.sources)&&(e.unseen=!1),t.count++}),t.stop()}),p.a.version(122).stores({buffer:["++_id","[accountId+path+operation]","accountId","[accountId+path]","operation","[accountId+destinationPath+operation]"].join(",")}).upgrade(async e=>{const t=new T(122,"Custom folders filtering"),a=(await e.filters.toCollection().primaryKeys()).map(e=>({filterId:e,type:U.U}));await e.views.bulkAdd(a);const s=await e.accounts.toArray(),i=y.b.getAllViewTypes(),n=[];for(const t of s){const{accountId:a,folders:s}=t,o=s[U.eb];if(o)for(const t of o){const{path:s}=t,o=y.b.getDefaultCustomFolderFilter(a,s),r=await e.filters.add(o);for(const t of i)await e.views.add({filterId:r,type:t});n.push([o.accountId,o.path])}}await e.filteringQueue.add({type:"RUN_FILTERS",priority:U.p.LOW,folderIds:n});const o=await e.searchList.toCollection().primaryKeys(),r=[];for(;o.length>0;)r.push({type:"RE_RUN_SLES",priority:U.p.LOW,searchListIds:o.splice(0,1e4)});await e.filteringQueue.bulkAdd(r),t.stop()}),p.a.version(123).upgrade(async e=>{const t=new T(123,'Undoing delete adds "unseen" label (VB-71009)');t.total=await e.searchList.count();const a=[];await e.searchList.filter(e=>e.flags.includes("unseen")).modify(e=>{e.flags=e.flags.filter(e=>"unseen"!==e),a.push(e.id),t.count++});const s={unseen:!1},i=(await e.imap.where("searchListId").anyOf(a).toArray()).map(e=>{const{accountId:t,path:a,uid:i}=e;return{operation:"BUFFER_OPERATION_CUSTOM_FLAG",accountId:t,path:a,flagUpdates:s,uids:[i]}});await e.buffer.bulkAdd(i);const n=await e.filters.where("[accountId+path]").equals([U.E,"unseen"]).first();if(n){const t=await e.views.where("filterId").equals(n.id).toArray();await e.views.where("filterId").equals(n.id).delete();const s=new Set(t.map(e=>e.id));await e.viewIds.where("searchListId").anyOf(a).modify(e=>e.viewIds=e.viewIds.filter(e=>!s.has(e))),await e.filters.where("[accountId+path]").equals([U.E,"unseen"]).delete(),await e.filters.where("[accountId+path]").equals([U.E,U.m]).modify(e=>{if(e.filterValue.include){const t=e.filterValue.include;e.filterValue.include=t.filter(e=>e.some(e=>"unseen"!==e.flag))}}),await e.filteringQueue.add({priority:U.p.LOW,type:"FILTERS_SLES",folderIds:[[U.E,U.m]],searchListIds:a})}t.stop()}),p.a.version(124).upgrade(async e=>{const t=new T(124,"Move name from FilterValue to Filter");t.total=await e.filters.count(),await e.filters.toCollection().modify(e=>{e.name=e.filterValue.name,delete e.filterValue.name,t.count++}),t.stop()}),p.a.version(125).upgrade(async e=>{e.filters.toCollection().modify(e=>{e.hasOwnProperty("hidden")&&delete e.hidden})}),p.a.version(126).upgrade(e=>{e.accounts.toCollection().modify(e=>{e.folders[U.sb]||(e.folders[U.sb]=[{name:U.rb,path:U.rb,delimiter:".",type:U.sb}])})}),p.a.version(127).upgrade(async e=>{const t=await e.searchList.count(),a=new T(127,"New thread key");a.total=2*t;const s=new Map;await e.searchList.each(e=>{1===e.threadKey.length&&s.set(e.threadKey[0],e.id),a.count++}),await e.searchList.toCollection().modify(e=>{const t=e.threadKey.shift(),i=s.get(t),n=1e3*Math.floor(t/1e3);e.threadKey.unshift(i||0),e.threadKey.unshift(n),a.count++}),a.stop()}),p.a.version(128).upgrade(async e=>{await e.filters.where("[accountId+path]").anyOf([[U.E,"$Label1"],[U.E,"$Label2"],[U.E,"$Label3"],[U.E,"$Label4"],[U.E,"$Label5"],[U.E,"$Label6"],[U.E,"$Label7"]]).modify(e=>{switch(e.name){case"$Label1":e.name="Important";break;case"$Label2":e.name="Meeting";break;case"$Label3":e.name="Valuable";break;case"$Label4":e.name="To Do";break;case"$Label5":e.name="Send Reply";break;case"$Label6":e.name="Call Back";break;case"$Label7":e.name="Funny"}})}),p.a.version(129).upgrade(async e=>{const t=new T(128,"Parent Feeds view does not show mails (VB-46436)"),a=[U.n,""],s=[U.n,"￿"],i=[];await e.filters.where("[accountId+path]").between(a,s).modify(e=>{i.push(e.id),e.path===U.m&&(e.filterValue.include=[[{accountId:U.n}]]),e.filterValue.showFeeds=!0,e.filterValue.showDeletedButton=!0,e.filterValue.showMailingLists=!1,e.filterValue.showMailingListsButton=!1,e.filterValue.showJunkButton=!1,e.filterValue.showFeedsButton=!1,e.filterValue.showSubfolders=!1,e.filterValue.showCustomFolderButton=!1});const n=[],o=await e.views.where("filterId").anyOf(i).toArray();t.total=o.length,o.forEach(e=>{"total"===e.type&&n.push(e.id),t.count++});const r=await e.viewIds.where("viewIds").anyOf(n).primaryKeys();await e.filteringQueue.add({priority:U.p.LOW,type:"FILTERS_SLES",folderIds:[[U.n,U.m]],searchListIds:r,updateFilters:!0}),t.stop()}),p.a.version(130).upgrade(async e=>{b.d.setStatus("Upgrade v130 mail: Fetching message IDs...",5e3);const t=await e.searchList.toCollection().primaryKeys();for(t.reverse(),b.d.setStatus("Upgrade v130 mail: Requesting re-filtering...",5e3);t.length>0;){const a=t.splice(0,5e3);await e.filteringQueue.add({priority:U.p.LOW,type:"RE_RUN_SLES",searchListIds:a})}b.d.setStatus("Upgrade v130 mail: Done",5e3)}),p.a.version(131).upgrade(async e=>{const t=new T(131,"Upgrade v131 mail: Checking whether messages are showing up in all source folders");t.total=await e.searchList.count();const a=new Map;if(await e.searchList.toCollection().modify(e=>{const s=[...e.sources.keys()].filter(t=>!e.sourceFilterIds.includes(t));if(s.length>0){const t=[...a.keys()].find(e=>e.length===s.length&&e.every(e=>s.includes(e)));void 0!==t?a.get(t).push(e.id):a.set(s,[e.id])}t.count++}),t.stop(),a.size>0){const t=await e.accounts.toArray(),s=new Map;t.forEach(e=>{const{accountId:t,folders:a}=e,i=new Map;s.set(t,i),Object.keys(a).forEach(e=>{a[e].forEach(t=>{i.set(t.path,e)})})});const i=new Map;a.forEach((e,t)=>{t.forEach(e=>i.set(e,void 0))}),(await e.filters.where("id").anyOf([...i.keys()]).toArray()).forEach(e=>{var t;switch(null===(t=s.get(e.accountId))||void 0===t?void 0:t.get(e.path)){case U.D:i.set(e.id,[U.c,U.C]);break;case U.wb:i.set(e.id,[U.c,U.vb]);break;case U.eb:i.set(e.id,[U.j,e.accountId+"/"+e.path])}}),b.d.setStatus("Upgrade v131 mail: Adding filtering to source folders that need it",5e3),a.forEach((t,a)=>{const s=[];a.forEach(e=>{const t=i.get(e);t&&!s.some(e=>e[0]===t[0]&&e[1]===t[1])&&s.push(t)}),e.filteringQueue.add({priority:U.p.LOW,type:"RE_RUN_SLES",searchListIds:t,filterIds:a,folderIds:s})})}b.d.setStatus("Upgrade v131 mail: Done",5e3)}),p.a.version(132).upgrade(async e=>{const t=[U.n,""],a=[U.n,"￿"],s=await e.filters.where("[accountId+path]").between(t,a).primaryKeys(),i=[U.i,"feed:"],n=[U.i,"feed:￿"],o=await e.filters.where("[accountId+path]").between(i,n).primaryKeys(),r=s.concat(o),d=await e.views.where("filterId").anyOf(r).primaryKeys();await e.views.where("id").anyOf(d).delete(),await e.filters.where("id").anyOf(r).delete();const c=await e.viewIds.where("viewIds").anyOf(d).primaryKeys();for(const t of[e.messages,e.tokens,e.searchList,e.threading,e.viewIds])await t.bulkDelete(c)}),p.a.version(133).upgrade(async e=>{const t=new T(133,"Upgrade v132 mail: Update filter buttons"),a=await e.accounts.toArray(),s=new Map;a.forEach(e=>{const{accountId:t,folders:a}=e,i=new Map;s.set(t,i),Object.keys(a).forEach(e=>{a[e].forEach(t=>{i.set(t.path,e)})})}),t.total=await e.filters.count(),await e.filters.toCollection().modify(e=>{var a;const{accountId:i,path:n,include:o,exclude:r,query:d,showMailingLists:c,showFeeds:l}=e.filterValue;let u=null===(a=s.get(e.accountId))||void 0===a?void 0:a.get(e.path);if(!u){if(u=e.accountId,e.accountId===U.c)switch(e.path){case U.ob:u=U.e;break;case U.xb:u=U.g;break;case U.rb:u=U.sb;break;case U.k:u=U.l;break;case U.gb:u=U.hb;break;case U.C:u=U.D;break;case U.vb:u=U.f}[...s.keys()].includes(e.accountId)&&(u=U.u)}const f=y.b.getSearchListButtons(u),p={...i&&{accountId:i},...n&&{path:n},...o&&{include:o},...r&&{exclude:r},...d&&{query:d},...f,...f.showMailingListsButton&&"boolean"==typeof c&&{showMailingLists:c},...f.showFeedsButton&&"boolean"==typeof l&&{showFeeds:l}},h=y.b.getFilterOptions(e);function w(e,t,a,s){f[t]||!y.b.shouldExcludeFlag(s,e)===a||y.b.toggleExcludeFlag(s,e)}function g(e,t,a,s){f[t]||!y.b.shouldExcludeFolderType(s,e)===a||y.b.toggleExcludeFolderType(s,e)}function m(t,a,s,i){f[a]||y.b.shouldIncludeAccountFolderType(i,e.accountId,t)===s||y.b.toggleIncludeAccountFolderType(i,e.accountId,t)}w(U.O.SEEN,"showReadButton",h.showRead,p),w(U.O.DELETED,"showDeletedButton",h.showDeleted,p),g(U.wb,"showDeletedButton",h.showDeleted,p),g(U.D,"showJunkButton",h.showJunk,p),g(U.eb,"showCustomFolderButton",h.showCustomFolder,p),m(U.D,"showJunkButton",h.showJunk,p),m(U.wb,"showDeletedButton",h.showDeleted,p),e.filterValue=p,t.count++}),t.stop()}),p.a.version(134).stores({imap:["[accountId+path+uid]","searchListId","[hasRaw+accountId+searchListId]","[accountId+path+searchListId]","accountId"].join(",")}),p.a.version(135).upgrade(async e=>{const t=await e.accounts.toArray();for(const e of t)await f.a.foldersToFilters(e.accountId,e.folders)}),p.a.version(136).upgrade(async e=>{const t=new T(136,"Upgrade v136 mail: Fix emails that shouldn't be in trash (VB-73737)"),a=await e.accounts.toArray(),s=[];for(const e of a){const{accountId:t,folders:a}=e;a[U.wb]&&a[U.wb].forEach(e=>{e.type===U.wb&&e.subscribed&&s.push([t,e.path])})}const i=await e.filters.where("[accountId+path]").anyOf(s).primaryKeys();t.total=await e.searchList.where("sourceFilterIds").noneOf(i).count();const n=new Map;await e.searchList.where("sourceFilterIds").noneOf(i).modify(e=>{e.sources.forEach((t,a)=>{if(!t.internal&&t.deleted){t.internal=!0;const s=n.get(a);s?s.add(e.id):n.set(a,new Set([e.id]))}}),t.count++}),t.stop();const o=await e.filters.where("id").anyOf(n.keys()).toArray(),r=[];o.forEach(e=>{const t=n.get(e.id);t&&t.forEach(t=>{r.push([e.accountId,e.path,t])})}),await e.imap.where("[accountId+path+searchListId]").anyOf(r).delete(),b.d.setStatus(`Upgrade v136 mail: Found ${r.length} messages that should not be in trash`,5e3)});const A=new Map;p.a.version(137).stores({_upgrades:"version"}),A.set(137,async e=>{new T(137,"Upgrade v137 mail",e).stop()}),A.set(138,async e=>{const t=new T(138,"Upgrade v138 mail: Run Custom Folder",e);await e.filteringQueue.add({priority:U.p.LOW,type:"RUN_FILTERS",folderIds:[[U.j,U.m]],updateFilters:!0}),t.stop()}),A.set(139,async e=>{const t=new T(139,"Upgrade v139 mail: Repair default filters",e),a=[],s=["total","unseen","unread","excludeMailingLists","excludeDeleted","excludeRssFeeds","excludeJunk","excludeCustomFolders"];for(const t of E.b){const{accountId:i,path:n}=t,o=await e.filters.where("[accountId+path]").equals([i,n]).first();if(o){const{id:i}=o,n={id:i,...t};await e.filters.put(n);const r=await e.views.where("filterId").equals(i).toArray(),d=new Set(r.map(e=>e.type));for(const t of s)if(!d.has(t)){const a={filterId:i,type:t};e.views.add(a)}a.push(i)}else{const i=await e.filters.add(t);for(const t of s)await e.views.add({filterId:i,type:t});a.push(i)}}if(a.length>0){const t={priority:U.p.LOW,type:"RUN_FILTERS",filterIds:a};e.filteringQueue.add(t)}t.stop()}),A.set(140,async e=>{const t=new T(140,"Map viewIds to new format",e);t.total=await e.viewIds.count()+await e.views.count();const a=new Map,s=["total","unseen","unread","excludeMailingLists","excludeDeleted","excludeRssFeeds","excludeJunk","excludeCustomFolders"];await e.views.each(e=>{const i=s.indexOf(e.type);-1!==i&&a.set(e.id,100*e.filterId+i),t.count++}),await e.viewIds.toCollection().modify(e=>{const s=new Set;e.viewIds.forEach(e=>{const t=a.get(e);"number"==typeof t&&s.add(t)}),e.viewIds=[...s],t.count++}),e.views.clear(),t.stop()}),p.a.version(141).stores({deletedFeedItems:"++id,path"}),A.set(142,async e=>{const t=new T(142,"Fixing default parent filters",e);let a,s,i,n,o,r;function d(e,t){const{include:a}=e.filterValue;for(const e of t){a.some(t=>Object(S.default)(t,e))||a.push(e)}}r=[U.F,""],o=[U.F,"￿"];const c=await e.filters.where("[accountId+path]").between(r,o).toArray(),l=[],u=[];for(const e of c){const{path:t,filterValue:n}=e;if(t===U.m)a=e;else if(t===U.t)s=e;else if(t===U.fb)i=e;else{const e=n.include.filter(e=>1===e.length&&(e[0].listId||e[0].senderIsMailingList));t.startsWith(U.t)?l.push(...e):t.startsWith(U.fb)&&u.push(...e)}}if(!a)throw new Error("Mailing list root folder not found");if(!s)throw new Error("Mailing list Important folder not found");if(!i)throw new Error("Mailing list Other folder not found");d(a,l),d(a,u),d(s,l),d(i,u),r=[U.E,""],o=[U.E,"￿"];const f=await e.filters.where("[accountId+path]").between(r,o).toArray(),p=[];for(const e of f){const{path:t,filterValue:a}=e;if(t===U.m)n=e;else{const e=a.include.filter(e=>1===e.length&&e[0].flag);p.push(...e)}}if(!n)throw new Error("Labels root folder not found");d(n,p),await e.filters.bulkPut([a,s,i,n]);const h=[a.id,s.id,i.id,n.id];await Object(I.a)({type:"RUN_FILTERS",priority:U.p.LOW,filterIds:h,updateFilters:!0}),t.stop()}),A.set(143,async e=>{const t=new T(143,"Fixing database inconsistency",e),a=await e.searchList.toCollection().primaryKeys(),s=await e.viewIds.toCollection().primaryKeys(),i=new Set(a),n=s.filter(e=>!i.has(e));await e.viewIds.where("searchListId").anyOf(n).delete(),t.stop()}),p.a.version(144).stores({viewIds:"searchListId"}),p.a.version(145).stores({importStatus:"profilePath"}),A.set(146,async e=>{const t=new T(146,"Fixing state of show-read button in received folder",e);await e.filters.where("[accountId+path]").equals([U.c,U.ob]).modify(e=>{e.filterValue={...e.filterValue,showReadButton:!0}}),t.stop()}),p.a.version(147).stores({mailingList:"listId"}),A.set(147,async e=>{const t=new T(147,"Group mailing lists providers (like xt.local and sparkpostmail.com)",e);await e.mailingList.bulkAdd(O);const a=U.F,s=[a,""],i=[a,"￿"],n=await e.filters.where("[accountId+path]").between(s,i).toArray(),o=[];if(n.forEach(e=>{(e.path.endsWith(".xt.local")||e.path.endsWith(".sparkpostmail.com")||e.path.endsWith("list-id.mcsv.net")||e.path.startsWith(U.fb+"/spc-")||e.path.startsWith(U.t+"/spc-"))&&o.push(e.id)}),o.length>0){const a=o.map(e=>100*e);await e.filters.where("id").anyOf(o).delete();const s=new Set,i=8;t.total=a.length,a.forEach(e=>{for(let t=0;t<i;t++)s.add(e+t)});const n=[];await e.viewIds.toCollection().modify(e=>{const a=e.viewIds.filter(e=>!s.has(e));a.length!==e.viewIds&&(n.push(e.searchListId),e.viewIds=a),t.count++}),await e.filteringQueue.add({priority:U.p.LOW,type:"RE_RUN_SLES",searchListIds:n,runMailingLists:!0,updateFilters:!0})}t.stop()}),A.set(148,async e=>{const t=new T(148,"VB-78846: Rerun views for flags and labels",e),a=[U.E,""],s=[U.E,"￿"],i=await e.filters.where("[accountId+path]").between(a,s).primaryKeys(),n=[U.q,""],o=[U.q,"￿"],r=await e.filters.where("[accountId+path]").between(n,o).primaryKeys();await e.filteringQueue.add({priority:U.p.LOW,type:"RUN_FILTERS",filterIds:[...i,...r]}),t.stop()}),p.a.version(149).stores({systemTasks:"++id",tokens:null}),A.set(149,async e=>{const t=new T(149,"Clear tokens table and prepare for transition to new search db ...",e);await e.systemTasks.add({taskName:"restore_full_text_search_db",currentPosition:0}),t.stop()}),A.set(150,async e=>{const t=new T(150,"VB-79158: [Mail] Unseen/Read status does not always match changes done with external server",e),a=await e.accounts.toArray(),s=[];for(const e of a){const{accountId:t,folders:a}=e;for(const e in a)a[e].forEach(e=>{s.push([t,e.path])})}const i=await e.filters.where("[accountId+path]").anyOf(s).toArray(),n=new Set;await e.searchList.toCollection().modify(e=>{const t=[...e.sources].filter(([e,t])=>t.internal),a=[...e.sources].filter(([e,t])=>!t.internal);t&&0!==t.length&&a&&0!==a.length&&a.forEach(([a,s])=>{var o;const r=null===(o=i.find(e=>e.id===a))||void 0===o?void 0:o.accountId;r&&t.forEach(([t,a])=>{var o;const d=null===(o=i.find(e=>e.id===t))||void 0===o?void 0:o.accountId;if(d&&d===r){const a=e.sources.get(t);a&&a.read!==s.read&&(a.read=s.read,n.add(e.id),a.read&&(e.unseen=!1))}})})}),await e.filteringQueue.add({priority:U.p.LOW,type:"RE_RUN_SLES",searchListIds:[...n]}),t.stop()}),A.set(151,async e=>{const t=new T(151,"Removing orphan source-filter IDs",e);t.total=await e.searchList.count();const a=await e.filters.toCollection().primaryKeys(),s=new Set(a);await e.searchList.toCollection().modify(e=>{e.sourceFilterIds=e.sourceFilterIds.filter(e=>s.has(e));const a=new Map;for(const[t,i]of e.sources)s.has(t)&&a.set(t,i);e.sources=a,t.count++}),t.stop()}),A.set(152,async e=>{const t=new T(152,"Resetting feed data for updating paths",e),a=await w.a.waitFor(()=>l.a.prefs.get(k.kRssSettings));if(0===a.length)return void t.stop();const s={},i=[];t.total=a.length;for(const n of a){const a=await e.filters.where("[accountId+path]").equals([U.n,n.path]).first();if(s[n.path])try{const t={accountId:U.n,filterValue:{exclude:s[n.path].filterValue.exclude.slice(),include:[[{accountId:U.n},{path:n.url}]],showCustomFolderButton:!1,showFeedsButton:!1,showJunkButton:!1,showMailingListsButton:!1},name:n.title,path:n.url},a=await e.filters.add(t);i.push(a)}catch(e){console.error(e)}else if(a){s[n.path]=a;const t={...a.filterValue,include:[[{accountId:U.n},{path:n.url}]]};await e.filters.update(a.id,{path:n.url,filterValue:t}),i.push(a.id)}else console.error("Filter not found for feed path",n.path);n.path=n.url,t.count++}l.a.prefs.set({path:"vivaldi.rss.settings",value:a}),await Object(I.a)({type:"RUN_FILTERS",priority:U.p.LOW,filterIds:i}),t.stop()}),A.set(153,async e=>{const t=new T(153,"Re-run contact filters",e),a=await e.filters.where("[accountId+path]").between([U.i,""],[U.i,"￿"]).primaryKeys(),s=await e.filters.where("[accountId+path]").between([U.F,""],[U.F,"￿"]).filter(e=>{var t;return null===(t=e.filterValue.include)||void 0===t?void 0:t.some(e=>e.some(e=>!!e.senderIsMailingList))}).primaryKeys();await Object(I.a)({type:"RUN_FILTERS",priority:U.p.LOW,filterIds:[...a,...s]}),t.stop()}),A.forEach((e,t)=>{p.a.version(t).upgrade(e)}),p.a.on("ready",async()=>{const e=await p.a._upgrades.toCollection().last(),t=[...A.keys()].filter(t=>t>e.version);t.sort((e,t)=>e-t);for(const e of t)await p.a.transaction("rw",p.a.tables,A.get(e))});var M=p.a,V=a(176),C=a(718),_=a(57),j=a(407),x=a(611),N=a(58),D=a(156),W=a(81),q=a(530),P=a(37);let B;function G(e,t={}){B||(B=new Worker("filtering-bundle.js"),B.onerror=console.error),B.postMessage({filtering:{func:e,args:t}})}var K={updateMailingListGroup:function(e){G("updateMailingListGroup",{mailingListGroup:e})},removeMailingListGroup:function(e){G("removeMailingListGroup",{mailingListGroup:e})},initFilters:function(){G("initFilters")},stop:function(){B&&(B.terminate(),B=void 0)}};let $;function J(e){const t=e.data.flagging;if(t){const{action:e}=t;if(void 0!==e){const{func:t}=e;switch(t){case"flushBuffer":Object(x.a)();break;default:console.warn("Unknown function",t)}}}}function Q(e){$||($=new Worker("flagging-bundle.js"),$.onerror=console.error,$.onmessage=J),$.postMessage({flagging:e})}var z={updateFlags:function(){Q({func:"updateFlags"})},initFilters:function(){Q({func:"initFilters",args:{}})},stop:function(){$&&($.terminate(),$=void 0)}},Y=a(515);M.open();const H=new BroadcastChannel("searchMessages");async function Z(e){if(e.origin!==P.o||!e.data)return;const{query:t,messageId:a}=e.data,s=await l.a.mailPrivate.searchMessages(t);H.postMessage({messageId:a,searchResult:s})}const X={updateThreads:Y.a.updateThreads,rerunThreading:Y.a.rerunThreading,start:async function(){await Object(q.d)(),await async function(){await g.a.initFilters(),K.initFilters(),z.initFilters()}(),await _.a.initFolders(),H.addEventListener("message",Z,!1)},stop:function(){H.removeEventListener("message",Z,!1),Object(q.b)(),g.a.clear(),D.a.clear(),_.a.clear(),K.stop(),z.stop(),Y.a.stop()},removeMailingListGroup:function(e){K.removeMailingListGroup(e)},updateMailingListGroup:function(e){K.updateMailingListGroup(e)},addAccount:async function(e,t){const a=e.MAIL_EMAIL,{accountType:s,offline:i}=e,n=s===U.J.POP,o=s===U.J.IMAP;if(!n&&!o)throw new Error(`Trying to add account ${a} of unsupported type ${s}`);const r=n?{[U.u]:[{name:U.v,path:U.v,delimiter:".",type:U.u}],[U.sb]:[{name:U.rb,path:U.rb,delimiter:".",type:U.sb}]}:{};await V.a.add(a,r,t);const d=await f.a.foldersToFilters(a,r);N.a.updateFilters(d),b.b.addAccounts({[a]:{capability:t,folders:r}}),i||(n?await Object(C.a)():j.a.connectIMAPClient(e))},flushBuffer:x.a,updateFlags:z.updateFlags};function ee(e){if(e.origin!==P.o)return;const{background:t}=e.data;if(t){const{promiseId:a,func:s,args:i=[]}=t;Promise.resolve().then(()=>X[s](...i)).then(t=>{e.source.postMessage({background:{promiseId:a,results:t}},e.origin)}).catch(t=>{t=t.message||t,e.source.postMessage({background:{promiseId:a,error:t}},e.origin)})}}function te(e){b.d.setStatus(Object(W.a)("Network connected"))}function ae(e){b.d.setStatus(Object(W.a)("No network connection"))}let se,ie=!1;const ne=new Map;function oe(e){const t=e.id;if("number"!=typeof t||"normal"!==e.type&&"popup"!==e.type)return;const a=Object(c.a)(e.extData);a.ext_id||(a.ext_id=d()()),delete a.isDropped,a.windowType=e.type,o.a.windows.update(t,{extData:JSON.stringify(a)}),"normal"===e.type&&void 0===se&&(se=t,o.a.runtime.sendMessage({changedMailClientWindow:!0,windowId:t}))}function re(){o.a.windows.getAll({populate:!0},e=>{for(var t=0;t<e.length;t++)oe(e[t]);o.a.windows.onCreated.addListener(e=>{oe(e)}),o.a.windows.onRemoved.addListener(async e=>{if(l.a.devtoolsPrivate.closeDevtools(1,e,e=>{}),se===e){const e=await o.a.windows.getAll({windowTypes:["normal"]});if(e.length>0){const t=e[0].id;se=t,o.a.runtime.sendMessage({changedMailClientWindow:!0,windowId:t})}else se=void 0}})})}o.a.runtime.onMessage.addListener((e,t,a)=>{if(e)if(e.setNavigationState){const t=e.setNavigationState;ne.set(t.tabId,t)}else if(e.getNavigationState&&e.getNavigationState.tabId&&"number"==typeof e.getNavigationState.tabId){const t=e.getNavigationState.tabId,s=ne.get(t);s&&a(s),ne.delete(t)}else e.dispatchAction&&o.a.runtime.sendMessage({...e})}),async function(){ie||(ie=!0,await Promise.all([s.a.loadPromise(),i.a.loadPromise(),n.a.loadPromise()]),window.addEventListener("message",ee,!1),window.addEventListener("online",te),window.addEventListener("offline",ae),Object(u.b)(),re())}()}});